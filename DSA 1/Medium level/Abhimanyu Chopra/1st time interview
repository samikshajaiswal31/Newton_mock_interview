========= Final call :- ==========

Q1) Time complexity of Insertion sort best case, Quick sort worst and average case, Merge sort ?

Q2) Given a sorted array and a number x, find a pair in an array whose sum is closest to x/ smaller than x.
    I/P:    {10, 22, 28, 29, 30, 40}, x = 54
    Output:  22 and 30
    (22+30 = 52 colsest to x=54, rest of pair are less than 52).
    
SOLUTION EXPLAIN BY INTERVIEWER IN 2 LOGIC ACCORDING TO TIME COMPLEXITY


           sum<k   //. possible 
           sum == k // best case 
           sum > k   // discard 

logic 1: int finalSum = -1;

         int i = 0;
         int j = arr.length-1;
         (2 pointer concept -> i and j from front & back)

          while(i<j)                                          // TIME COMPLEXITY : O(n)                 
          {
               sum = arr[i]+arr[j]
	             if(sum>k)
  	              j--;
    
               if(sum<k)
  	              i++;
          }
          
logic 2: arr[] = 10, 22, 28, 29, 30, 40}, x = 54

          for(int i = 0;i<arr.length;i++)                        // TIME COMPLEXITY : O(n^2) 
          {
              for(int j = i+1 ;i<arr.length;i++)
              {
  		            sum = arr[i]+arr[j]
                  if(sum==k)
      	              return sum
                  else if(sum>k)  
      		            break;
                  else if (sum < k && finalSum < sum)   
                  {
      		          finalSum = sum ;
                  } 
              }
              return finalSum;
          }
